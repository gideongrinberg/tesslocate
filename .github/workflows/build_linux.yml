name: Build (Linux)
on: 
  workflow_call:

jobs:
  build_linux:
    name: Build ${{ matrix.os }}-${{ matrix.arch }}
    runs-on: ${{ matrix.runner }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: linux
            arch: x86_64
            runner: ubuntu-latest
          - os: linux
            arch: arm64
            runner: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Install homebrew
        run: |
          if [ ! -f "/home/linuxbrew/.linuxbrew/bin/brew" ]; then
            sudo apt-get update && sudo apt-get install --yes build-essential procps curl file git && \
            /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
          fi
          echo 'eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"' >> ~/.brewrc
      
      - name: Cache Homebrew
        uses: actions/cache@v4
        with:
          path: |
            /home/linuxbrew/.linuxbrew
            ~/.cache/Homebrew
          key: homebrew-${{ runner.os }}-${{ matrix.arch }}-${{ hashFiles('.github/workflows/**') }}-v1
          restore-keys: |
            homebrew-${{ runner.os }}-${{ matrix.arch }}-
            homebrew-${{ runner.os }}-

      - name: Install system dependencies
        run: |
          sudo apt-get install --yes libcurl4-openssl-dev libssl-dev
      - name: Install dependencies
        run: |
          source ~/.brewrc
          brew install libomp nlohmann-json cmake libarchive abseil


      - name: Cache s2geometry
        uses: actions/cache@v4
        id: s2geometry-cache
        with:
          path: |
            s2/
          key: s2geometry-v0.11.1-${{ runner.os }}-${{ matrix.arch }}

      - name: Build s2geometry 
        if: steps.s2geometry-cache.outputs.cache-hit != 'true'
        run : |
          source ~/.brewrc
          mkdir -p s2/ && curl -L https://github.com/google/s2geometry/archive/refs/tags/v0.11.1.zip -o - | bsdtar xvf - -C s2 --strip-components=1 && \
          cd s2 && mkdir build && cd build && cmake -DWITH_GFLAGS=OFF -DWITH_GTEST=OFF -DBUILD_TESTS=OFF .. && make -j$(nproc) && sudo make install

      - name: Install cached s2geometry
        if: steps.s2geometry-cache.outputs.cache-hit == 'true'
        run: |
          source ~/.brewrc
          cd s2/build && sudo make install

      - name: Build binaries
        run: |
          source ~/.brewrc
          export PKG_CONFIG_PATH="/home/linuxbrew/.linuxbrew/lib/pkgconfig:$PKG_CONFIG_PATH"
          export LDFLAGS="-L/home/linuxbrew/.linuxbrew/lib $LDFLAGS"
          export CPPFLAGS="-I/home/linuxbrew/.linuxbrew/include $CPPFLAGS"
          cmake -S . -B build -DCMAKE_BUILD_TYPE=Release
          cmake --build build --target tesslocate
      
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: tesslocate-${{ matrix.os }}-${{ matrix.arch }}
          path: build/tesslocate

