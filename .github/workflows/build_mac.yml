name: Build (macOS)

on: 
  push:
    branches:
      - ci-fix

jobs:
  build_macos:
    name: Build ${{ matrix.os }}-${{ matrix.arch }}
    runs-on: ${{ matrix.runner }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos
            arch: x86_64
            runner: macos-13
          # - os: macos
          #   arch: arm64
          #   runner: macos-14
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          brew install libomp nlohmann-json cmake libarchive abseil curl

      - name: Cache s2geometry
        uses: actions/cache@v4
        id: s2geometry-cache
        with:
          path: |
            s2/
          key: s2geometry-v0.11.1-${{ runner.os }}-${{ matrix.arch }}

      - name: Build s2geometry 
        if: steps.s2geometry-cache.outputs.cache-hit != 'true'
        run: |
          mkdir -p s2/ && curl -L https://github.com/google/s2geometry/archive/refs/tags/v0.11.1.zip -o - | tar xz -C s2 --strip-components=1 && \
          cd s2 && mkdir build && cd build && cmake -DWITH_GFLAGS=OFF -DWITH_GTEST=OFF -DBUILD_TESTS=OFF .. && make -j$(sysctl -n hw.ncpu) && make install

      - name: Install cached s2geometry
        if: steps.s2geometry-cache.outputs.cache-hit == 'true'
        run: |
          cd s2/build && make install

      - name: Build binaries
        run: |
          export PKG_CONFIG_PATH="${HOMEBREW_PREFIX}/lib/pkgconfig:$PKG_CONFIG_PATH"
          export LDFLAGS="-L${HOMEBREW_PREFIX}/lib $LDFLAGS"
          export CPPFLAGS="-I${HOMEBREW_PREFIX}/include $CPPFLAGS"
          cmake -S . -B build -DCMAKE_BUILD_TYPE=Release
          cmake --build build --target tesslocate
      
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: tesslocate-${{ matrix.os }}-${{ matrix.arch }}
          path: build/tesslocate